dont_enforce_access_settings = 0

# Set this to disable the "classroom" feature
disable_classroom = 1
disable_lightbox = 0
dontAllowRegistrationAndLogin = 0
dont_approve_logins_on_registration = 0
email_notification_for_new_registrations = 1
dont_moderate_comments = 0
dont_email_notification_for_new_comments = 1

# set the access level for "privileged" viewing.
allow_ca_objects_representation_download = logged_in
privileged_access_settings = [1,2]

#
# Set this if you want urls that refer to specified items to use the identifier 
# rather than CollectiveAccess internal ID. The former is more descriptive but will
# not work if you have duplicate identifiers in your catalogue!
#
use_identifiers_in_urls = 0

#
# Front page set code
#
front_page_set_code = frontPage

#
# Allow PHP code in content-managed site pages
#
# By default only value tags in the form {{{tag-name}}} are allowed in Pawtucket site page templates. 
# If you need the flexibility and power afforded by direct embedding of PHP code in your templates
# set this option to a non-zero value. Note that enabling this option will allow execution of ANY
# code embedded in the template on EVERY page load. Depending upon your point of view this is either a
# feature or a security hole. It doesn't have to be a problem, but keep it in mind...
#
allow_php_in_site_page_templates = 0


#
# Configuration for Excel (xlsx) and PowerPoint (pptx) export formats
# PDF formats are configured using templates in app/printTemplates
# (See http://docs.collectiveaccess.org/wiki/PDF_Output)
#
export_formats = {
	ca_objects = {
		basic_excel = {
			name = Excel,
			type = xlsx,
			columns = {    

				"Identifier" = {
					template = ^ca_objects.idno
				},
				"Original Identifier" = {
					template = ^ca_objects.originalid
				},
				"Collection" = {
					template = "<unit relativeTo='ca_collections'>^ca_collections.hierarchy.preferred_labels%delimiter=_>_</unit>"
				},
				"Title" = {
					template = ^ca_objects.preferred_labels.name
				},
				"Alternative Title" = {
					template = ^ca_objects.alternativetitle
				},
				"Image" = {
					template = ^ca_object_representations.media.large
				},
				"External Link (Name)" = {
					template = ^ca_objects.exlink.exlink_name
				},
				"External Link (URL)" = {
					template = ^ca_objects.exlink.exlink_url
				},
				"Description" = {
					template = ^ca_objects.description
				},
				"Alternative Description" = {
					template = ^ca_objects.descriptionalt
				},
				"Languages" = {
					template = "<ifcount code='ca_objects.langmaterial.lang' min='1'><div class='unit'><unit relativeTo='ca_objects.langmaterial'>^ca_objects.langmaterial.langlabel: ^ca_objects.langmaterial.lang</unit></div></ifcount>"
				},

				"Resource Type" = {
					template = "<unit relativeTo='ca_list_items' restrictToRelationshipTypes='resource_type' >   <l>^ca_list_items.preferred_labels.name_singular</l></unit>"
				},
				"Keywords" = {
					template = "<unit relativeTo='ca_list_items' restrictToRelationshipTypes='keyword' >   <l>^ca_list_items.preferred_labels.name_singular</l></unit>"
				},
				"Notes" = {
					template = ^ca_objects.notes
				},
				"Places" = {
					template = "<unit relativeTo='ca_places' delimiter='; '>^ca_places.preferred_labels (^ca_places.type_id)</unit>"
				},
				"Coordinates" = {
					template = ^ca_objects.georeference
				},
				"Alternative Place Name" = {
					template = ^ca_objects.alt_place_name
				},
				"Cultural Group" = {
					template = ^ca_objects.cultgroup
				},
				"Cultural Context" = {
					template = "<unit relativeTo='ca_list_items' restrictToRelationshipTypes='culturalcontext' >   <l>^ca_list_items.preferred_labels.name_singular</l></unit>"
				},
				"Social Group Setting" = {
					template = ^ca_objects.socialgroup
				},
				"Production Technique" = {
					template = ^ca_objects.prodtech
				},
				"Equipment Used" = {
					template = ^ca_objects.equipused
				},

				"Date" = {
					template = "<ifcount code='ca_objects.dates.dates_value' min='1'><div class='unit'><unit relativeTo='ca_objects.dates'>^ca_objects.dates.dates_type: ^ca_objects.dates.dates_value</unit></div></ifcount>"
				},	
				"Entities" = {
					template = "<unit relativeTo='ca_entities' delimiter='<br/>'>^ca_entities.preferred_labels (^relationship_typename)</unit>"
				},
				"Rights" = {
					template = ^ca_objects.rights
				},
				"TK Labels" = {
					template = ^ca_objects.tklabel
				},
				"BC Labels" = {
					template = ^ca_objects.bclabel
				},
				"Cultural Sensitivity" = {
					template = ^ca_objects.cultsens
				},
				"Access Restriction" = {
					template = ^ca_objects.access
				},
				"Reasons for restriction" = {
					template = ^ca_objects.reasonforrest
				},
			}
		}
	},
	ca_collections = {
		basic_excel = {
			name = Excel,
			type = xlsx,
			columns = {
				"Title" = {
					template = ^ca_collections.hierarchy.preferred_labels%delimiter=_>_
				},
				"Administrative/Biographical History" = {
					template = "^ca_collections.adminbiohist%delimiter=,_"
				},
				"Abstract" = {
					template = "^ca_collections.abstract%delimiter=,_"
				},
				"Scope and Content" = {
					template = "^ca_collections.scopecontent%delimiter=,_"
				},
				"Date" = {
					template = "<unit relativeTo='ca_collections.unitdate' delimiter='; '><ifdef code='ca_collections.unitdate.dacs_dates_labels'>^ca_collections.unitdate.dacs_dates_labels: </ifdef>^ca_collections.unitdate.dacs_date_text <ifdef code='ca_collections.unitdate.dacs_dates_types'>^ca_collections.unitdate.dacs_dates_types</ifdef></unit>"
				},
				"Extent" = {
					template = "<unit relativeTo='ca_collections.extentDACS'><ifdef code='ca_collections.extentDACS.extent_number'>^ca_collections.extentDACS.extent_number </ifdef><ifdef code='ca_collections.extentDACS.portion_label'>^ca_collections.extentDACS.portion_label </ifdef><ifdef code='ca_collections.extentDACS.extent_type'>^ca_collections.extentDACS.extent_type</ifdef><ifdef code='ca_collections.extentDACS.container_summary'><ifdef code='ca_collections.extentDACS.extent_number|ca_collections.extentDACS.portion_label|ca_collections.extentDACS.extent_type'>; </ifdef>^ca_collections.extentDACS.container_summary</ifdef><ifdef code='ca_collections.extentDACS.physical_details'><ifdef code='ca_collections.extentDACS.extent_number|ca_collections.extentDACS.portion_label|ca_collections.extentDACS.extent_type'>; </ifdef>^ca_collections.extentDACS.physical_details</ifdef></unit>"
				},
				"Location" = {
					template = "<unit relativeTo='ca_storage_locations' delimiter='; '>^ca_storage_locations.hierarchy.preferred_labels%delimiter=_âž”_</unit>"
				},
				"Material Format" = {
					template = "^ca_collections.material_type%delimiter=,_"
				},
				"Subjects" = {
					template = "^ca_collections.LcshSubjects%delimiter=,_"
				},
				"Related Collections" = {
					template = "^ca_collections.relation%delimiter=,_"
				},
				"Restrictions" = {
					template = "^ca_collections.accessrestrict%delimiter=,_"
				},
				"Physical access" = {
					template = "^ca_collections.physaccessrestrict%delimiter=,_"
				},
				"Genres" = {
					template = "<unit delimiter='; '>^ca_collections.LcshGenre</unit><ifdef code='ca_collections.LcshGenre,ca_collections.aat'>; </ifdef><unit delimiter='<br/>'>^ca_collections.aat</unit>"
				},
				"Preferred citation" = {
					template = "^ca_collections.preferCite%delimiter=,_"
				},
				"Related Entities" = {
					template = "<unit relativeTo='ca_entities' delimiter=';'>^ca_entities.preferred_labels (^relationship_typename)</unit>"
				},
				"Places" = {
					template = "<unit relativeTo='ca_places' delimiter='; '>^ca_places.preferred_labels (^relationship_typename)</unit>"
				}
			}
		}
	}
}

summary_header_enabled = 1
report_img = logo-one-line-light-bg.png
# results footer has page number
summary_footer_enabled = 1
# identifier and timestamp are options for summary
summary_show_identifier = 1
summary_show_timestamp = 1


#
# Display template used to format information text at bottom of media overlay. Template is evaluated relative to the item with which the media is
# associated. If left blank preferred label + identifier of the item associated with the media is displayed.
#
media_overlay_titlebar_template =

#
# Representation versions to provide download option for in media viewer. If omitted then no download control is displayed
# (Uncomment the directive below to enable downloads)
#
#ca_object_representation_download_versions = [original]

#
# Configuration for image comparison interface. Set first key to table name (for now only ca_objects are supported)
# and second level keys to option names with values. 
# 
compare_images = {
	ca_objects = {
		# template to use when displaying object name within compare interface
		title_template = ^ca_objects.preferred_labels.name
	}
}

# 
# Configuration for registration security method
# This can either be set to sum_equation (for basic arithmetic challenge question: 4+7=?) or captcha, which implements a Google reCaptcha
# If you select reCaptcha, you will have to register the application and provide two API keys to allow google to process the captcha
# You can do so at https://www.google.com/recaptcha
#

registration_security = captcha

# -----------------------
# Global template values
# -----------------------
# Globals are text values that may be set in the Pawtucket web UI and substituted
# into any view template, including headers and footers. Values defined here 
# will be editable in the "Global Values Editor" (available to users with the can_edit_theme_global_values priv)
# and usable in templates under their name (Eg. {{{operating_hours}}} in the example below).
#
# Options controlling how the editor displays the value may be set for each global. Width and height control the size 
# of the element; usewysiwygeditor enables a "wysiwyg" rich text editor for formatted text.
#
global_template_values = {
	FrontWelcome = {
		name = "Front page: Welcome line",
		description = "Front page: Welcome line",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1 
	},
	FrontAbout = {
		name = "Front page: About the archives",
		description = "Front page: About the archives",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1 
	},
	contactIntro = {
		name = "Contact Page: Introduction",
		description = "Contact Page: Introduction",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1 
	},
	advancedCollection = {
		name = "Advanced Search: Collection text",
		description = "Advanced Search: Collection text",
		width = 600px,
		height = 50px,
		usewysiwygeditor = 0 
	},
	advancedArchivalItems = {
		name = "Advanced Search: Archival items text",
		description = "Advanced Search: Archival items text",
		width = 600px,
		height = 50px,
		usewysiwygeditor = 0 
	}
}
